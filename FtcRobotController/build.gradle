apply plugin: 'com.android.application'

android {
    compileSdkVersion = 'android-19'
    buildToolsVersion = '19.1'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 19
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

allprojects {
    repositories {
        maven { url "https://jitpack.io" }
        jcenter()
        flatDir {
            dirs 'out'
        }
    }
}

dependencies {
    compile files('libs/android-support-v4.jar')
    compile(name: 'RobotCore-release', ext: 'aar')
    compile(name: 'Hardware-release', ext: 'aar')
    compile(name: 'FtcCommon-release', ext: 'aar')
    compile(name: 'ModernRobotics-release', ext: 'aar')
    compile(name: 'Analytics-release', ext: 'aar')
    compile(name: 'WirelessP2p-release', ext: 'aar')
    compile 'net.sourceforge.streamsupport:streamsupport:1.3.2'
    compile 'org.atteo.classindex:classindex:3.4'
    compile 'org.apache.commons:commons-math3:3.6'
    compile 'com.github.Pattonville-Robotics:Common-Code:7e10b3c@aar'
    //compile project(':FtcRobotLibrary')
}

project.android.applicationVariants.all { variant ->
    variant.outputs.each { output ->
        def pkgTask = output.packageApplication
        def String variantName = variant.getName().capitalize()
        if (pkgTask.getName().indexOf(variantName) != -1) {
            pkgTask.setJavaResourceDir(new File(buildDir, "intermediates/classes/$variant.dirName"))
        }
    }
}
